# Generated by Django 5.2 on 2025-04-11 17:12

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('api_key', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'AI Model',
                'verbose_name_plural': 'AI Models',
                'ordering': ['-active', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=500)),
                ('sender', models.CharField(max_length=255)),
                ('recipient', models.CharField(max_length=255)),
                ('received_date', models.DateTimeField()),
                ('message_id', models.CharField(max_length=500, unique=True)),
                ('body_text', models.TextField()),
                ('body_html', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('manual_processed', 'Manual Processed'), ('sent_to_robot', 'Sent to Robot'), ('robot_processed', 'Robot Processed'), ('ignored', 'Ignored'), ('error', 'Error')], default='pending', max_length=20)),
                ('has_attachments', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
                'ordering': ['-received_date'],
            },
        ),
        migrations.CreateModel(
            name='EmailAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('content_type', models.CharField(max_length=100)),
                ('file', models.FileField(upload_to='email_attachments/%Y/%m/%d/')),
                ('size', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Email Attachment',
                'verbose_name_plural': 'Email Attachments',
                'ordering': ['filename'],
            },
        ),
        migrations.CreateModel(
            name='EmailFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('filter_type', models.CharField(choices=[('subject', 'Subject'), ('sender', 'Sender'), ('keyword', 'Keyword'), ('date', 'Date')], max_length=20)),
                ('pattern', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Email Filter',
                'verbose_name_plural': 'Email Filters',
                'ordering': ['filter_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EmailRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(max_length=255)),
                ('room_type', models.CharField(max_length=255)),
                ('market', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('sale_type', models.CharField(choices=[('stop', 'Stop Sale'), ('open', 'Open Sale')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('room_not_found', 'Room Not Found'), ('hotel_not_found', 'Hotel Not Found'), ('sent_to_robot', 'Sent to Robot'), ('robot_processed', 'Robot Processed'), ('ignored', 'Ignored'), ('error', 'Error')], default='pending', max_length=20)),
                ('ai_extracted', models.BooleanField(default=False)),
                ('regex_extracted', models.BooleanField(default=False)),
                ('manually_edited', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Email Row',
                'verbose_name_plural': 'Email Rows',
                'ordering': ['email__received_date', 'hotel_name', 'room_type'],
            },
        ),
        migrations.CreateModel(
            name='Prompt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('active', models.BooleanField(default=False)),
                ('success_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Prompt',
                'verbose_name_plural': 'Prompts',
                'ordering': ['-active', '-success_rate'],
            },
        ),
        migrations.CreateModel(
            name='RegexRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_type', models.CharField(choices=[('hotel_name', 'Hotel Name'), ('room_type', 'Room Type'), ('market', 'Market'), ('date_range', 'Date Range'), ('sale_type', 'Sale Type')], max_length=50)),
                ('pattern', models.CharField(max_length=500)),
                ('success_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Regex Rule',
                'verbose_name_plural': 'Regex Rules',
                'ordering': ['-success_count'],
            },
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('approve_row', 'Approve Row'), ('edit_row', 'Edit Row'), ('send_to_robot', 'Send to Robot'), ('mark_hotel_not_found', 'Mark Hotel Not Found'), ('mark_room_not_found', 'Mark Room Not Found'), ('ignore_email', 'Ignore Email'), ('assign_email', 'Assign Email')], max_length=50)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'User Log',
                'verbose_name_plural': 'User Logs',
                'ordering': ['-timestamp'],
            },
        ),
    ]
